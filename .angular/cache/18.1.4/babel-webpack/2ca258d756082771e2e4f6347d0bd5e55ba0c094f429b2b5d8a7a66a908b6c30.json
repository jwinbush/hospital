{"ast":null,"code":"import { Quiz } from '../../models/index';\nimport { flyInOut, expand } from '../../Utilities/animations/animation';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/quiz.service\";\nimport * as i2 from \"src/app/services/sharing.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../Utilities/navbar/navbar.component\";\nfunction SelfAnalysisComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const quiz_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", quiz_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", quiz_r1.name, \" \");\n  }\n}\nfunction SelfAnalysisComponent_div_14_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" Time: \", ctx_r2.ellapsedTime, \" / \", ctx_r2.duration, \" \");\n  }\n}\nfunction SelfAnalysisComponent_div_14_div_1_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"div\", 22)(2, \"label\", 16)(3, \"input\", 23);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function SelfAnalysisComponent_div_14_div_1_div_8_Template_input_ngModelChange_3_listener($event) {\n      const option_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      i0.ɵɵtwoWayBindingSet(option_r5.selected, $event) || (option_r5.selected = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"change\", function SelfAnalysisComponent_div_14_div_1_div_8_Template_input_change_3_listener() {\n      const option_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const question_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onSelect(question_r6, option_r5));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const option_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"for\", option_r5.id);\n    i0.ɵɵadvance();\n    i0.ɵɵpropertyInterpolate(\"id\", option_r5.id);\n    i0.ɵɵtwoWayProperty(\"ngModel\", option_r5.selected);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", option_r5.name, \" \");\n  }\n}\nfunction SelfAnalysisComponent_div_14_div_1_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\", 24);\n    i0.ɵɵtext(2, \"Please Click Submit\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction SelfAnalysisComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 14);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, SelfAnalysisComponent_div_14_div_1_div_3_Template, 2, 2, \"div\", 15);\n    i0.ɵɵelementStart(4, \"h2\", 16);\n    i0.ɵɵtext(5);\n    i0.ɵɵelement(6, \"span\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 18);\n    i0.ɵɵtemplate(8, SelfAnalysisComponent_div_14_div_1_div_8_Template, 5, 4, \"div\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, SelfAnalysisComponent_div_14_div_1_div_9_Template, 3, 0, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" Question \", ctx_r2.pager.index + 1, \" of \", ctx_r2.pager.count, \". \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.config.duration);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"@flyInOut\", undefined);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.pager.index + 1, \". \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"innerHTML\", question_r6.name, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"@flyInOut\", undefined);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", question_r6.options);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.pager.index == 9);\n  }\n}\nfunction SelfAnalysisComponent_div_14_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function SelfAnalysisComponent_div_14_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.goTo(ctx_r2.pager.index - 1));\n    });\n    i0.ɵɵtext(1, \"Prev\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SelfAnalysisComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SelfAnalysisComponent_div_14_div_1_Template, 10, 9, \"div\", 10);\n    i0.ɵɵelement(2, \"hr\");\n    i0.ɵɵelementStart(3, \"div\", 11);\n    i0.ɵɵtemplate(4, SelfAnalysisComponent_div_14_button_4_Template, 2, 0, \"button\", 12);\n    i0.ɵɵelementStart(5, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function SelfAnalysisComponent_div_14_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.goTo(ctx_r2.pager.index + 1));\n    });\n    i0.ɵɵtext(6, \"Next\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.filteredQuestions);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.config.allowBack);\n  }\n}\nfunction SelfAnalysisComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"div\", 31);\n    i0.ɵɵlistener(\"click\", function SelfAnalysisComponent_div_15_div_1_Template_div_click_1_listener() {\n      const index_r10 = i0.ɵɵrestoreView(_r9).index;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.goTo(index_r10));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r11 = ctx.$implicit;\n    const index_r10 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵclassMapInterpolate1(\"p-3 mb-2 \", ctx_r2.isAnswered(question_r11) == \"Answered\" ? \"bg-info\" : \"bg-warning\", \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", index_r10 + 1, \". \", ctx_r2.isAnswered(question_r11), \" \");\n  }\n}\nfunction SelfAnalysisComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtemplate(1, SelfAnalysisComponent_div_15_div_1_Template, 3, 5, \"div\", 27);\n    i0.ɵɵelementStart(2, \"div\", 28)(3, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function SelfAnalysisComponent_div_15_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.mode = \"quiz\");\n    });\n    i0.ɵɵtext(4, \" Back \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.quiz.questions);\n  }\n}\nfunction SelfAnalysisComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 11)(2, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function SelfAnalysisComponent_div_17_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onSubmit());\n    });\n    i0.ɵɵtext(3, \" Submit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function SelfAnalysisComponent_div_17_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.mode = \"review\");\n    });\n    i0.ɵɵtext(5, \" Review \");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction SelfAnalysisComponent_div_18_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\", 43);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.analysisResultPositive, \" \");\n  }\n}\nfunction SelfAnalysisComponent_div_18_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\", 44);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.analysisResultNegative, \" \");\n  }\n}\nfunction SelfAnalysisComponent_div_18_div_13_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"input\", 47);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function SelfAnalysisComponent_div_18_div_13_div_5_Template_input_ngModelChange_1_listener($event) {\n      const Option_r15 = i0.ɵɵrestoreView(_r14).$implicit;\n      i0.ɵɵtwoWayBindingSet(Option_r15.selected, $event) || (Option_r15.selected = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const Option_r15 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵpropertyInterpolate(\"id\", Option_r15.id);\n    i0.ɵɵtwoWayProperty(\"ngModel\", Option_r15.selected);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", Option_r15.name, \" \");\n  }\n}\nfunction SelfAnalysisComponent_div_18_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 45)(2, \"h5\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 46);\n    i0.ɵɵtemplate(5, SelfAnalysisComponent_div_18_div_13_div_5_Template, 3, 3, \"div\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"div\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r16 = ctx.$implicit;\n    const index_r17 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", index_r17 + 1, \". \", question_r16.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", question_r16.options);\n    i0.ɵɵadvance();\n    i0.ɵɵclassMapInterpolate1(\"p-1 m-3 alert \", ctx_r2.isCorrect(question_r16) == \"correct\" ? \"\" : \"\", \"\");\n  }\n}\nfunction SelfAnalysisComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"nav\", 35)(2, \"ol\", 36)(3, \"li\", 37)(4, \"a\", 38);\n    i0.ɵɵtext(5, \"Home\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"li\", 39)(7, \"a\", 40);\n    i0.ɵɵlistener(\"click\", function SelfAnalysisComponent_div_18_Template_a_click_7_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.resetVars());\n    });\n    i0.ɵɵtext(8, \"Self-Analysis\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(9, \"h2\");\n    i0.ɵɵtext(10, \"Analysis Responses\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, SelfAnalysisComponent_div_18_div_11_Template, 3, 1, \"div\", 6)(12, SelfAnalysisComponent_div_18_div_12_Template, 3, 1, \"div\", 6)(13, SelfAnalysisComponent_div_18_div_13_Template, 7, 6, \"div\", 10);\n    i0.ɵɵelementStart(14, \"p\", 41);\n    i0.ɵɵtext(15, \" All the generated analysis results are tentative and do not carry any guarantee \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 11)(17, \"a\", 42);\n    i0.ɵɵlistener(\"click\", function SelfAnalysisComponent_div_18_Template_a_click_17_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.resetVars());\n    });\n    i0.ɵɵtext(18, \"Take Another Self-Analysis \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.onPositive() == 1);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.onPositive() == 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.quiz.questions);\n  }\n}\nlet positive = 0;\nlet answers = [];\nexport let SelfAnalysisComponent = /*#__PURE__*/(() => {\n  class SelfAnalysisComponent {\n    constructor(quizService, sharingService) {\n      this.quizService = quizService;\n      this.sharingService = sharingService;\n      this.hidecomponent = \"cat\";\n      this.analysisResultPositive = '';\n      this.analysisResultNegative = '';\n      this.heightfix = \"heightfix\";\n      this.marginHide = \"heading-1\";\n      this.quiz = new Quiz(null);\n      this.mode = 'quiz';\n      this.config = {\n        'allowBack': true,\n        'allowReview': true,\n        'autoMove': true,\n        // if true, it will move to next question automatically when answered.\n        'duration': 600,\n        // indicates the time (in secs) in which quiz needs to be completed. 0 means unlimited.\n        'pageSize': 1,\n        'requiredAll': true,\n        // indicates if you must answer all the questions before submitting.\n        'richText': false,\n        'shuffleQuestions': true,\n        'shuffleOptions': false,\n        'showClock': false,\n        'showPager': true,\n        'theme': 'none'\n      };\n      this.pager = {\n        index: 0,\n        size: 1,\n        count: 1\n      };\n      this.timer = null;\n      this.ellapsedTime = '00:00';\n      this.duration = '';\n    }\n    ngOnInit() {\n      this.quizes = this.quizService.getAll();\n      this.quizName = this.quizes[0].id;\n      this.loadQuiz(this.quizName);\n      if (this.quizes[0]) {}\n      this.light = this.sharingService.getData();\n    }\n    loadQuiz(quizName) {\n      this.quizService.get(quizName).subscribe(res => {\n        this.quiz = new Quiz(res);\n        this.pager.count = this.quiz.questions.length;\n        this.pager.index = 0;\n        this.startTime = new Date();\n        this.ellapsedTime = '00:00';\n        this.timer = setInterval(() => {\n          this.tick();\n        }, 1000);\n        this.duration = this.parseTime(this.config.duration);\n      });\n      this.mode = 'quiz';\n    }\n    tick() {\n      const now = new Date();\n      const diff = (now.getTime() - this.startTime.getTime()) / 1000;\n      if (diff >= this.config.duration) {\n        this.onSubmit();\n      }\n      this.ellapsedTime = this.parseTime(diff);\n    }\n    parseTime(totalSeconds) {\n      let mins = Math.floor(totalSeconds / 60);\n      let secs = Math.round(totalSeconds % 60);\n      mins = (mins < 10 ? '0' : '') + mins;\n      secs = (secs < 10 ? '0' : '') + secs;\n      return `${mins}:${secs}`;\n    }\n    get filteredQuestions() {\n      return this.quiz.questions ? this.quiz.questions.slice(this.pager.index, this.pager.index + this.pager.size) : [];\n    }\n    onSelect(question, option) {\n      if (question.QuestionTypeId == 1) {\n        question.Options.forEach(x => {\n          if (x.Id != option.Id) x.Selected = false;\n        });\n      }\n      if (this.config.autoMove) {\n        this.goTo(this.pager.index + 1);\n      }\n    }\n    goTo(index) {\n      if (index >= 0 && index < this.pager.count) {\n        this.pager.index = index;\n        this.mode = 'quiz';\n      }\n    }\n    isAnswered(question) {\n      return question.options.find(x => x.selected) ? 'Answered' : 'Not Answered';\n    }\n    isCorrect(question) {\n      //     if(question.options.every(x => x.selected === x.isAnswer)){\n      //      return positive = positive + 1;\n      // }\n      return question.options.every(x => x.selected === x.isAnswer) ? 'correct' : 'wrong';\n    }\n    onSubmit() {\n      this.quiz.questions.forEach(x => answers.push({\n        'quizId': this.quiz.id,\n        'questionId': x.id,\n        'answered': x.answered,\n        'isans0': x.options[0].isAnswer,\n        'isans1': x.options[1].isAnswer,\n        'isans2': x.options[2].isAnswer,\n        'isans3': x.options[3].isAnswer,\n        's0': x.options[0].selected,\n        's1': x.options[1].selected,\n        's2': x.options[2].selected,\n        's3': x.options[3].selected\n      }));\n      // Post your data to the server here. answers contains the questionId and the users' answer.\n      for (let i = 0; i < 10; i++) {\n        if (answers[i].isans0 == true && answers[i].s0 == true) {\n          positive = positive + 1;\n        } else if (answers[i].isans1 == true && answers[i].s1 == true) {\n          positive = positive + 1;\n        } else if (answers[i].isans2 == true && answers[i].s2 == true) {\n          positive = positive + 1;\n        } else if (answers[i].isans3 == true && answers[i].s3 == true) {\n          positive = positive + 1;\n        }\n      }\n      // to hide the category option on submit \n      if (this.hidecomponent == \"cat\") {\n        this.hidecomponent = \"category2\";\n      } else {\n        this.hidecomponent = \"\";\n      }\n      if (this.marginHide == \"heading-1\") {\n        this.marginHide = \"marginHide2\";\n      } else {\n        this.marginHide = \"\";\n      }\n      if (this.heightfix) {\n        this.heightfix = \"\";\n      } else {\n        this.heightfix = \"heightfix2\";\n      }\n      this.mode = 'result';\n      if (answers[1].quizId == 1) {\n        this.analysisResultPositive = \"YOU NEED TO TAKE A COVID-19 TEST, CONTACT YOUR NEARBY COVID TESTING CENTER TO GET TESTED FOR COVID-19!\";\n        this.analysisResultNegative = \"COVID TEST IS NOT REQUIRED! YOU DO NOT HAVE COVID SYMPTOMS\";\n      }\n      if (answers[1].quizId == 2) {\n        this.analysisResultPositive = \"YOU NEED TO CONSULT A DOCTOR, CONTACT YOUR NEARBY DOCTOR TO GET TESTED FOR EATING DISORDER!\";\n        this.analysisResultNegative = \"YOU ARE HEALTHY! YOU DO NOT HAVE ANY SYMPTOMS OF EATING DISORDER\";\n      }\n      if (answers[1].quizId == 3) {\n        this.analysisResultPositive = \"YOU NEED TO CONSULT A DOCTOR, CONTACT YOUR NEARBY dOCTOR TO GET TESTED FOR PHYSICAL HEALTH!\";\n        this.analysisResultNegative = \"YOU ARE PHYSICALLY HEALTHY! YOU DO NOT HAVE ANY SYMPTOMS OF PHYSICAL HEALTH DISORDER\";\n      }\n      if (answers[1].quizId == 4) {\n        this.analysisResultPositive = \"YOU NEED TO CONSULT A DOCTOR, CONTACT YOUR NEARBY PSYCHIATRIST TO GET TESTED FOR MENTAL DISORDER!\";\n        this.analysisResultNegative = \"YOU ARE MENTALY HEALTHY! YOU DO NOT HAVE ANY SYMPTOMS OF MENTAL DISORDER\";\n      }\n    }\n    onPositive() {\n      // console.log(positive);\n      if (positive >= 6) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n    resetVars() {\n      this.hidecomponent = 'cat';\n      this.analysisResultPositive = '';\n      this.analysisResultNegative = '';\n      this.heightfix = 'heightfix';\n      this.marginHide = 'heading-1';\n      this.loadQuiz(this.quizName);\n    }\n    static #_ = this.ɵfac = function SelfAnalysisComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || SelfAnalysisComponent)(i0.ɵɵdirectiveInject(i1.QuizService), i0.ɵɵdirectiveInject(i2.SharingService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SelfAnalysisComponent,\n      selectors: [[\"app-self-analysis\"]],\n      features: [i0.ɵɵProvidersFeature([QuizService])],\n      decls: 21,\n      vars: 19,\n      consts: [[1, \"home\", \"container\"], [1, \"col-lg-12\", \"col-md-12\", \"col-sm-12\", \"col-xs-12\", \"d-flex\", \"justify-content-center\", \"cat\"], [1, \"select\", \"badge\", \"badge-info\"], [3, \"ngModelChange\", \"change\", \"ngModel\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"quiz\"], [4, \"ngIf\"], [\"class\", \"row text-center\", 4, \"ngIf\"], [\"class\", \"result\", 4, \"ngIf\"], [3, \"value\"], [4, \"ngFor\", \"ngForOf\"], [1, \"text-center\"], [\"class\", \"btn grow  btn-primary mr-3\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"grow\", \"btn-primary\", \"ml-3\", 3, \"click\"], [1, \"badge\", \"badge-info\"], [\"class\", \"badge badge-info float-right\", 4, \"ngIf\"], [1, \"font-weight-normal\"], [3, \"innerHTML\"], [1, \"row\", \"text-left\", \"options\"], [\"class\", \"col-6\", 4, \"ngFor\", \"ngForOf\"], [1, \"badge\", \"badge-info\", \"float-right\"], [1, \"col-6\"], [1, \"option\"], [\"type\", \"checkbox\", 3, \"ngModelChange\", \"change\", \"id\", \"ngModel\"], [2, \"text-align\", \"center\", \"font-weight\", \"bold\"], [1, \"btn\", \"grow\", \"btn-primary\", \"mr-3\", 3, \"click\"], [1, \"row\", \"text-center\"], [\"class\", \"col-4 cursor-pointer\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-12\"], [1, \"btn\", \"grow\", \"btn-back\", \"btn-primary\", 3, \"click\"], [1, \"col-4\", \"cursor-pointer\"], [3, \"click\"], [1, \"btn\", \"grow\", \"btn-submit\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"grow\", \"btn-review\", \"btn-info\", 3, \"click\"], [1, \"result\"], [\"aria-label\", \"breadcrumb\"], [1, \"breadcrumb\"], [1, \"breadcrumb-item\"], [\"routerLink\", \"/home\"], [\"aria-current\", \"page\", 1, \"breadcrumb-item\", \"active\"], [\"tabindex\", \"0\", \"role\", \"button\", 3, \"click\"], [1, \"text-muted\", 2, \"text-align\", \"center\"], [\"tabindex\", \"0\", \"role\", \"button\", 1, \"badge\", \"badge-info\", 3, \"click\"], [\"id\", \"positive-heading-1\"], [\"id\", \"positive-heading-3\"], [1, \"result-question\"], [1, \"row\"], [\"type\", \"checkbox\", \"disabled\", \"disabled\", 3, \"ngModelChange\", \"id\", \"ngModel\"]],\n      template: function SelfAnalysisComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-navbar\");\n          i0.ɵɵelementStart(1, \"div\")(2, \"div\", 0)(3, \"div\")(4, \"div\")(5, \"div\", 1)(6, \"span\", 2);\n          i0.ɵɵtext(7, \" Select Category:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"select\", 3);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function SelfAnalysisComponent_Template_select_ngModelChange_8_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.quizName, $event) || (ctx.quizName = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"change\", function SelfAnalysisComponent_Template_select_change_8_listener() {\n            return ctx.loadQuiz(ctx.quizName);\n          });\n          i0.ɵɵtemplate(9, SelfAnalysisComponent_option_9_Template, 2, 2, \"option\", 4);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(10, \"div\", 5)(11, \"h2\");\n          i0.ɵɵtext(12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"hr\");\n          i0.ɵɵtemplate(14, SelfAnalysisComponent_div_14_Template, 7, 2, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(15, SelfAnalysisComponent_div_15_Template, 5, 1, \"div\", 7);\n          i0.ɵɵelement(16, \"hr\");\n          i0.ɵɵtemplate(17, SelfAnalysisComponent_div_17_Template, 6, 0, \"div\", 6)(18, SelfAnalysisComponent_div_18_Template, 19, 3, \"div\", 8);\n          i0.ɵɵelement(19, \"br\")(20, \"br\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵclassMapInterpolate2(\"self \", ctx.light, \" \", ctx.heightfix, \"\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassMapInterpolate1(\"row  \", ctx.hidecomponent, \"\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"@expand\", undefined);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.quizName);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.quizes);\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassMapInterpolate1(\"text-center heading-1 font-weight-normal \", ctx.marginHide, \"\");\n          i0.ɵɵproperty(\"@expand\", undefined);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.quiz.name, \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.mode == \"quiz\" && ctx.quiz);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.mode == \"review\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.mode != \"result\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.mode == \"result\");\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i4.RouterLink, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.CheckboxControlValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgModel, i6.NavbarComponent],\n      styles: [\".grow[_ngcontent-%COMP%]{transition:all .2s ease-in-out}.select[_ngcontent-%COMP%]{font-size:200%;margin:2vh 1%;font-weight:700}select[_ngcontent-%COMP%]{border-radius:.5rem;margin:.35em .65em}.grow[_ngcontent-%COMP%]:hover{transform:scale(1.1)}.badge-info[_ngcontent-%COMP%]{color:#000;background-color:#7da0fa}.btn-review[_ngcontent-%COMP%]{background-color:#f3797e;margin-left:8%}.btn-submit[_ngcontent-%COMP%]{background-color:#008f00}.btn-back[_ngcontent-%COMP%]{background-color:#7da0fa}.btn[_ngcontent-%COMP%]{border-radius:5px}body[_ngcontent-%COMP%]{background-color:#000}.heading-1[_ngcontent-%COMP%]{left:38vw;color:#000;font-size:400%;text-align:center;justify-content:center;margin-top:3%;padding-top:1vh}.cat[_ngcontent-%COMP%]{padding-top:8vh}.category2[_ngcontent-%COMP%]{display:none}#positive-heading-1[_ngcontent-%COMP%]{color:red;font-weight:700}#positive-heading-3[_ngcontent-%COMP%]{color:green;font-weight:700}.badge[_ngcontent-%COMP%]{font-size:115%}.btn-locate-center[_ngcontent-%COMP%]{border-radius:25px;background-color:#7da0fa}.option[_ngcontent-%COMP%]{background-color:#7da0fa;font-size:20px;border-radius:10px;padding:10px;margin:3px}#quiz[_ngcontent-%COMP%]   .options[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]{height:22px;width:22px}.cursor-pointer[_ngcontent-%COMP%]{cursor:pointer}.result-question[_ngcontent-%COMP%]{background-color:#eee;margin:4px;padding:6px}.heightfix[_ngcontent-%COMP%]{min-height:100vh}.marginHide2[_ngcontent-%COMP%]{padding-top:12vh}.result[_ngcontent-%COMP%]{min-height:max-content}.dark[_ngcontent-%COMP%]{background-color:#161625}.dark[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{color:#fff}.dark[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{background-color:#323f4b;color:#fff}.dark[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{border-color:#161625}.dark[_ngcontent-%COMP%]   .result-question[_ngcontent-%COMP%]{background-color:#323f4b;color:#fff}.dark[_ngcontent-%COMP%]   .breadcrumb[_ngcontent-%COMP%]{background-color:#161625}@media (max-width: 992px){.heading-1[_ngcontent-%COMP%]{left:38vw;font-size:350%}}@media (max-width: 768px){.heading-1[_ngcontent-%COMP%]{left:38vw;font-size:300%}}@media only screen and (max-width: 480px){h1[_ngcontent-%COMP%], .h1[_ngcontent-%COMP%]{font-size:22px}h2[_ngcontent-%COMP%], .h2[_ngcontent-%COMP%]{font-size:20px}h3[_ngcontent-%COMP%], .h3[_ngcontent-%COMP%]{font-size:18px}.option[_ngcontent-%COMP%]{font-size:16px;padding:6px}}@media (max-width: 576px){.heading-1[_ngcontent-%COMP%]{left:38vw;font-size:300%;line-height:45px}.heightfix[_ngcontent-%COMP%]{max-height:130vh}}\"],\n      data: {\n        animation: [flyInOut(), expand()]\n      }\n    });\n  }\n  return SelfAnalysisComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}